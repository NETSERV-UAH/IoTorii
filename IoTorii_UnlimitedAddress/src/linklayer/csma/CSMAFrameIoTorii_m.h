//
// Generated file, do not edit! Created by nedtool 5.2 from src/linklayer/csma/CSMAFrameIoTorii.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __IOTORII_CSMAFRAMEIOTORII_M_H
#define __IOTORII_CSMAFRAMEIOTORII_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
    #include "inet/linklayer/common/MACAddress.h"
    #include "src/linklayer/common/eGA3Frame.h"

   typedef struct {
       inet::MACAddress MAC;
       iotorii::eGA3Frame eGA3;
   } AddressStruct;
    
    
// }}


namespace iotorii {

/**
 * Class generated from <tt>src/linklayer/csma/CSMAFrameIoTorii.msg:24</tt> by nedtool.
 * <pre>
 * packet CSMAFrameIoTorii
 * {
 *     AddressStruct srcAddr;
 *     AddressStruct destAddr;
 * }
 * </pre>
 */
class CSMAFrameIoTorii : public ::omnetpp::cPacket
{
  protected:
    AddressStruct srcAddr;
    AddressStruct destAddr;

  private:
    void copy(const CSMAFrameIoTorii& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CSMAFrameIoTorii&);

  public:
    CSMAFrameIoTorii(const char *name=nullptr, short kind=0);
    CSMAFrameIoTorii(const CSMAFrameIoTorii& other);
    virtual ~CSMAFrameIoTorii();
    CSMAFrameIoTorii& operator=(const CSMAFrameIoTorii& other);
    virtual CSMAFrameIoTorii *dup() const override {return new CSMAFrameIoTorii(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual AddressStruct& getSrcAddr();
    virtual const AddressStruct& getSrcAddr() const {return const_cast<CSMAFrameIoTorii*>(this)->getSrcAddr();}
    virtual void setSrcAddr(const AddressStruct& srcAddr);
    virtual AddressStruct& getDestAddr();
    virtual const AddressStruct& getDestAddr() const {return const_cast<CSMAFrameIoTorii*>(this)->getDestAddr();}
    virtual void setDestAddr(const AddressStruct& destAddr);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CSMAFrameIoTorii& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CSMAFrameIoTorii& obj) {obj.parsimUnpack(b);}

} // namespace iotorii

#endif // ifndef __IOTORII_CSMAFRAMEIOTORII_M_H

