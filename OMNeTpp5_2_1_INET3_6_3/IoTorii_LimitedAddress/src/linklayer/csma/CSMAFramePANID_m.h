//
// Generated file, do not edit! Created by nedtool 5.2 from src/linklayer/csma/CSMAFramePANID.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __INET_CSMAFRAMEPANID_M_H
#define __INET_CSMAFRAMEPANID_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
    #include "inet/linklayer/csma/CSMAFrame_m.h"
    #include "inet/linklayer/common/MACAddress.h"
    
// }}


namespace inet {

/**
 * Class generated from <tt>src/linklayer/csma/CSMAFramePANID.msg:24</tt> by nedtool.
 * <pre>
 * //
 * // Adding PAN IDs to the CSMA mac frame
 * //
 * packet CSMAFramePANID extends CSMAFrame
 * {
 *     MACAddress dstPANID; // Destination PAN ID in form of short address (2 bytes), size is considered in header size parameter
 *     MACAddress srcPANID; // Source PAN ID in form of short address (2 bytes), size is considered in header size parameter
 * }
 * </pre>
 */
class CSMAFramePANID : public ::inet::CSMAFrame
{
  protected:
    MACAddress dstPANID;
    MACAddress srcPANID;

  private:
    void copy(const CSMAFramePANID& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CSMAFramePANID&);

  public:
    CSMAFramePANID(const char *name=nullptr, short kind=0);
    CSMAFramePANID(const CSMAFramePANID& other);
    virtual ~CSMAFramePANID();
    CSMAFramePANID& operator=(const CSMAFramePANID& other);
    virtual CSMAFramePANID *dup() const override {return new CSMAFramePANID(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual MACAddress& getDstPANID();
    virtual const MACAddress& getDstPANID() const {return const_cast<CSMAFramePANID*>(this)->getDstPANID();}
    virtual void setDstPANID(const MACAddress& dstPANID);
    virtual MACAddress& getSrcPANID();
    virtual const MACAddress& getSrcPANID() const {return const_cast<CSMAFramePANID*>(this)->getSrcPANID();}
    virtual void setSrcPANID(const MACAddress& srcPANID);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CSMAFramePANID& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CSMAFramePANID& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_CSMAFRAMEPANID_M_H

